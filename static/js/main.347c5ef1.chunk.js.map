{"version":3,"sources":["notes/do.wav","notes/re.wav","notes/mi.wav","notes/fa.wav","notes/sol.wav","notes/la.wav","notes/si.wav","App.js","index.js"],"names":["App","notas","nombre","link","require","sostenido","useState","sonando","setSonando","setTimeout","className","map","nota","onClick","Audio","default","play","handlerClickNote","Math","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAAA,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,iC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,qGCsF1BA,MAnFf,WAEE,IAAMC,EAAQ,CACZ,CACEC,OAAQ,KACRC,KAAMC,EAAQ,IACdC,WAAY,GAEd,CACEH,OAAQ,KACRC,KAAMC,EAAQ,IACdC,WAAY,GAEd,CACEH,OAAQ,KACRC,KAAMC,EAAQ,KAEhB,CACEF,OAAQ,KACRC,KAAMC,EAAQ,IACdC,WAAY,GAEd,CACEH,OAAQ,MACRC,KAAMC,EAAQ,IACdC,WAAY,GAEd,CACEH,OAAQ,KACRC,KAAMC,EAAQ,IACdC,WAAY,GAEd,CACEH,OAAQ,KACRC,KAAMC,EAAQ,MAiBlB,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OAJFC,YAAW,WACTD,EAAW,MACX,KAGE,gCACE,sBAAKE,UAAU,SAAf,UACE,iDACA,gDACA,oBAAIA,UAAU,eAAd,SAA8BH,OAEhC,qBAAKG,UAAU,YAAf,SACGT,EAAMU,KAAI,SAAAC,GAAI,OACb,qBAEEF,UAAS,eAAUH,GAAWK,EAAKV,QAAU,WAC7CW,QAAS,kBAhCM,SAAAD,GACvBJ,EAAWI,EAAKV,QACD,IAAIY,MAAMF,EAAKT,KAAKY,SAC5BC,OA6BgBC,CAAiBL,IAHlC,SAMGA,EAAKP,UAAY,qBAAKK,UAAU,UAAiB,MAL7B,IAAhBQ,KAAKC,mBCnEtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.347c5ef1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/do.a2508143.wav\";","export default __webpack_public_path__ + \"static/media/re.419c7811.wav\";","export default __webpack_public_path__ + \"static/media/mi.51e5702c.wav\";","export default __webpack_public_path__ + \"static/media/fa.fdf4ed24.wav\";","export default __webpack_public_path__ + \"static/media/sol.e5e79dda.wav\";","export default __webpack_public_path__ + \"static/media/la.5351f634.wav\";","export default __webpack_public_path__ + \"static/media/si.42883966.wav\";","import './App.sass';\nimport {useState} from 'react';\n\nfunction App() {\n\n  const notas = [\n    {\n      nombre: 'Do',\n      link: require('./notes/do.wav'),\n      sostenido : true\n    },\n    {\n      nombre: 'Re',\n      link: require('./notes/re.wav'),\n      sostenido : true\n    },\n    {\n      nombre: 'Mi',\n      link: require('./notes/mi.wav'),\n    },\n    {\n      nombre: 'Fa',\n      link: require('./notes/fa.wav'),\n      sostenido : true\n    },\n    {\n      nombre: 'Sol',\n      link: require('./notes/sol.wav'),\n      sostenido : true\n    },\n    {\n      nombre: 'La',\n      link: require('./notes/la.wav'),\n      sostenido : true\n    },\n    {\n      nombre: 'Si',\n      link: require('./notes/si.wav'),\n    },\n  ]\n \n\n  const handlerClickNote = nota =>{\n    setSonando(nota.nombre);\n    const sonido = new Audio(nota.link.default);\n    sonido.play()\n    \n  }\n\n// Hook UseState\n// 1-Variable inicial\n// 2- Func que se dedique a actualizar la Variable\n// 3-valor inicial de la variable\n\n  const [sonando, setSonando] = useState('');\n  \n\n \nsetTimeout(() =>{\n  setSonando('')\n},500)\n\n  return (\n    <div>\n      <div className=\"titulo\">\n        <h1>Piano con React</h1>\n        <h2>Hecho por Male</h2>\n        <h3 className=\"esta-sonando\">{sonando}</h3>\n      </div>\n      <div className=\"container\">\n        {notas.map(nota => (\n          <div \n            key={Math.random() * 100}\n            className={`nota ${sonando == nota.nombre && 'sonando'}`} \n            onClick={() => handlerClickNote(nota)}\n          >\n            {/* {nota.sostenido && <div className=\"negra\"></div>} */}\n            {nota.sostenido ? <div className=\"negra\"></div> : null}\n          </div>\n        ))}\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}